import React, { useState, useEffect } from 'react';
import { toast } from 'react-toastify';
import { getPaymentSettings, updatePaymentSettings } from '../../lib/walletApi';
import { supabase } from '../../lib/supabase';

export default function PaymentSettings() {
  const [loading, setLoading] = useState(false);
  const [paymentMethods, setPaymentMethods] = useState([]);
  const [settings, setSettings] = useState({
    deliveryCommission: 15,
    autoDeductFromDriver: true,
    autoChargeVendor: true,
    paymentMethods: [],
    wallet: {
      enabled: true,
      name: 'ุชูุตูู ูุญูุธุฉ (ุงูุฏูุน ุงููุณุจู)',
      description: 'ุนูุฏ ุชูุนูู ูุฐุง ุงูุฎูุงุฑุ ูุชู ุงูุชุนุงูู ูุน ุงูุทูุจุงุช ุงููุฏููุนุฉ ูุณุจููุง (ุนุจุฑ ุงููุญูุธุฉ ุฃู ุงูุฏูุน ุงูุฅููุชุฑููู)',
      steps: [
        'ููุนุชุจุฑ ุงูุชูุตูู ูู ูุฐู ุงูุญุงูุฉ ูุฏููุนูุง ูุณุจููุง',
        'ูุชู ุดุญู ูุญูุธุฉ ุงูุจุงุฆุน ุจุงููุงูู ุจูููุฉ ุงูุทูุจ + ุงูุชูุตูู',
        'ูุชู ุฎุตู ููุณ ุงููููุฉ ูู ูุญูุธุฉ ุงูุณุงุฆู ุชููุงุฆููุง',
        'ุงูุณุงุฆู ูุณุชูู ูู ุงูุฒุจูู ููุท ุฃุฌุฑุฉ ุงูุชูุตูู ูุฏูุง ุจูุฏ'
      ],
      note: 'โ ูุฐุง ุงููุธุงู ููุงุณุจ ูุชุทุจููุงุช ุงูุฏูุน ุงููุณุจู ูุงูุทูุจุงุช ุงูุชู ุชูุฏูุน ุฃูููุงูู'
    },
    traditional: {
      enabled: true,
      name: 'ุงููุญูุธุฉ ุงูุชูููุฏูุฉ (ุงูุฏูุน ุนูุฏ ุงูุงุณุชูุงู)',
      description: 'ูู ูุฐุง ุงููุธุงูุ ูุชู ุชูุณูู ุงููุจูุบ ูุจุงุดุฑุฉ ุนูุฏ ุงูุชุณููู',
      steps: [
        'ุงูุฒุจูู ูุฏูุน ูุงูู ุงููุจูุบ (ุงูุทูุจ + ุงูุชูุตูู) ููุณุงุฆู',
        'ูุชู ุชุญููู ูููุฉ ุงูุทูุจ ุฅูู ูุญูุธุฉ ุงูุจุงุฆุน',
        'ููุชู ุฅุถุงูุฉ ูููุฉ ุงูุชูุตูู ุฅูู ูุญูุธุฉ ุงูุณุงุฆู'
      ],
      note: 'โ ูุฐุง ุงูุฎูุงุฑ ููุงุณุจ ููุทูุจุงุช ุงูุชู ูุชู ุฏูุนูุง ููุฏูุง ุนูุฏ ุงูุชุณููู'
    },
    cash: {
      enabled: true,
      name: 'ุงูุฏูุน ุนูุฏ ุงูุงุณุชูุงู',
      description: 'ุงูุฏูุน ููุฏุงู ุนูุฏ ุงุณุชูุงู ุงูุทูุจ',
      steps: [
        'ุงูุฒุจูู ูุทูุจ ูู ุงููุชุฌุฑ',
        'ุงูุณุงุฆู ูุณุชูู ุงูุทูุจ ูู ุงููุชุฌุฑ',
        'ุงูุณุงุฆู ููุตู ุงูุทูุจ ููุฒุจูู',
        'ุงูุฒุจูู ูุฏูุน ุงููุจูุบ ูุงููุงู (ูููุฉ ุงูุทูุจ + ุงูุชูุตูู) ููุณุงุฆู'
      ],
      balanceNotes: [
        'ุฑุตูุฏ ุงูุจุงุฆุน = 0 (ุญุชู ูุชู ุงูุชุญุตูู)',
        'ุฑุตูุฏ ุงูุณุงุฆู = 0 (ุญุชู ูุชู ุงูุชุญุตูู)'
      ],
      icon: '๐ฐ',
      color: 'green'
    },
    electronic: {
      enabled: true,
      name: 'ุงูุฏูุน ุงูุฅููุชุฑููู',
      description: 'ุงูุฏูุน ุงููุณุจู ุนุจุฑ ุจุทุงูุฉ ุงูุงุฆุชูุงู ุฃู ุงููุญูุธุฉ ุงูุฅููุชุฑูููุฉ',
      steps: [
        'ุงูุฒุจูู ูุฏูุน ูุงูู ุงููุจูุบ ุฅููุชุฑูููุงู (ูููุฉ ุงูุทูุจ + ุงูุชูุตูู)',
        'ุงูุจุงุฆุน ูุณุชูู ูููุฉ ุงูุทูุจ ูุจุงุดุฑุฉ',
        'ุงูุณุงุฆู ูุณุชูู ูููุฉ ุงูุชูุตูู ูุจุงุดุฑุฉ',
        'ุงูุณุงุฆู ููุตู ุงูุทูุจ ููุฒุจูู'
      ],
      balanceNotes: [
        'ุฑุตูุฏ ุงูุจุงุฆุน = ูููุฉ ุงูุทูุจ (ููุฑุงู)',
        'ุฑุตูุฏ ุงูุณุงุฆู = ูููุฉ ุงูุชูุตูู (ููุฑุงู)'
      ],
      icon: '๐ณ',
      color: 'blue'
    }
  });

  // ุชุญููู ุงูุฅุนุฏุงุฏุงุช ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
  useEffect(() => {
    fetchPaymentMethods();
    const loadSettings = async () => {
      try {
        setLoading(true);
        const paymentSettings = await getPaymentSettings();
        
        if (paymentSettings && paymentSettings.wallet) {
          setSettings(paymentSettings);
        }
      } catch (error) {
        console.error('Error loading wallet settings:', error);
        toast.error('ูุดู ูู ุชุญููู ุฅุนุฏุงุฏุงุช ุงููุญูุธุฉ');
      } finally {
        setLoading(false);
      }
    };
    
    loadSettings();
  }, []);

  // ุชุญููู ุทุฑู ุงูุฏูุน ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
  const fetchPaymentMethods = async () => {
    try {
      const { data, error } = await supabase
        .from('payment_methods')
        .select('*')
        .order('id');
      
      if (error) throw error;
      setPaymentMethods(data || []);
    } catch (error) {
      console.error('Error fetching payment methods:', error);
      toast.error('ูุดู ูู ุชุญููู ุทุฑู ุงูุฏูุน');
    }
  };

  const handleSave = async () => {
    try {
      setLoading(true);
      
      // ุญูุธ ุงูุฅุนุฏุงุฏุงุช ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
      const paymentSettings = {
        ...settings
        // ูููู ุฅุถุงูุฉ ุงููุฒูุฏ ูู ุงูุฅุนุฏุงุฏุงุช ููุง
      };
      
      updatePaymentSettings(paymentSettings);
      
      toast.success('ุชู ุญูุธ ุฅุนุฏุงุฏุงุช ุงููุญูุธุฉ ุจูุฌุงุญ');
    } catch (error) {
      console.error('Error saving wallet settings:', error);
      toast.error('ูุดู ูู ุญูุธ ุฅุนุฏุงุฏุงุช ุงููุญูุธุฉ');
    } finally {
      setLoading(false);
    }
  };

  // ุชุญุฏูุซ ุญุงูุฉ ุทุฑููุฉ ุงูุฏูุน
  const handlePaymentMethodStatusChange = async (id, enabled) => {
    try {
      setLoading(true);
      
      const { error } = await supabase
        .from('payment_methods')
        .update({ status: enabled ? 'active' : 'inactive' })
        .eq('id', id);
      
      if (error) throw error;
      
      // ุชุญุฏูุซ ุงููุงุฆูุฉ ุงููุญููุฉ
      setPaymentMethods(methods => 
        methods.map(method => 
          method.id === id ? { ...method, status: enabled ? 'active' : 'inactive' } : method
        )
      );
      
      toast.success(`ุชู ${enabled ? 'ุชูุนูู' : 'ุชุนุทูู'} ุทุฑููุฉ ุงูุฏูุน ุจูุฌุงุญ`);
    } catch (error) {
      console.error('Error updating payment method status:', error);
      toast.error('ูุดู ูู ุชุญุฏูุซ ุญุงูุฉ ุทุฑููุฉ ุงูุฏูุน');
    } finally {
      setLoading(false);
    }
  };

  const PaymentMethodCard = ({ type, method }) => (
    <div className="bg-gradient-to-br from-white to-gray-50 rounded-lg shadow-md p-6 border border-gray-100">
      <div className="flex items-center justify-between mb-6">
        <div className="flex items-center gap-3">
          <div className={`p-2 rounded-full ${
            method.type === 'wallet' ? 'bg-purple-100 text-purple-600' : 
            method.type === 'electronic' ? 'bg-blue-100 text-blue-600' : 
            'bg-green-100 text-green-600'
          }`}>
            {method.icon || (
              method.type === 'wallet' ? '๐' : 
              method.type === 'electronic' ? '๐ณ' : 
              '๐ฐ'
            )}
          </div>
          <h3 className="text-xl font-bold">{method.name || 'ุทุฑููุฉ ุฏูุน'}</h3>
        </div>
        <label className="relative inline-flex items-center cursor-pointer">
          <input
            type="checkbox"
            checked={method.status === 'active'}
            onChange={(e) => handlePaymentMethodStatusChange(method.id, e.target.checked)}
            className="sr-only peer"
          />
          <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:right-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
        </label>
      </div>

      <div className="space-y-6">
        <div className="bg-white p-4 rounded-lg border border-gray-100">
          <p className="text-gray-600">{method.description}</p>
        </div>

        <div>
          <h4 className="font-semibold text-gray-800 mb-3 flex items-center gap-2">
            <span className="text-blue-600">๐</span>
            ุฎุทูุงุช ุงูุนูู
          </h4>
          <div className="space-y-2">
            {method.settings?.steps?.map((step, index) => (
              <div key={index} className="bg-white px-4 py-2 rounded-lg shadow-sm">
                {step}
              </div>
            ))}
          </div>
        </div>

        {method.settings?.note && (
          <div className={`p-4 rounded-lg ${
            method.type === 'wallet' ? 'bg-purple-50 text-purple-800' : 
            method.type === 'electronic' ? 'bg-blue-50 text-blue-800' : 
            'bg-green-50 text-green-800'
          }`}>
            <p>{method.settings.note}</p>
          </div>
        )}
      </div>
    </div>
  );

  return (
    <div className="space-y-8">
      <div className="flex justify-between items-center bg-white p-4 rounded-lg shadow-sm border border-gray-100">
        <div className="flex items-center gap-3">
          <div className="p-2 bg-blue-100 text-blue-600 rounded-lg">โ๏ธ</div>
          <h2 className="text-2xl font-bold">ุฅุนุฏุงุฏุงุช ุทุฑู ุงูุฏูุน</h2>
        </div>
        <button
          onClick={handleSave}
          disabled={loading}
          className={`bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2 ${loading ? 'opacity-70 cursor-not-allowed' : ''}`}
        >
          <span>๐พ</span>
          {loading ? 'ุฌุงุฑู ุงูุญูุธ...' : 'ุญูุธ ุงูุชุบููุฑุงุช'}
        </button>
      </div>

      {/* Payment Methods */}
      <div className="grid grid-cols-1 gap-8 mt-8">
        <h2 className="text-2xl font-bold mb-4">ุทุฑู ุงูุฏูุน ุงููุชุงุญุฉ</h2>
        {paymentMethods.length === 0 ? (
          <div className="bg-white p-8 rounded-lg shadow-md text-center">
            <p className="text-gray-500">ูุง ุชูุฌุฏ ุทุฑู ุฏูุน ูุชุงุญุฉ</p>
          </div>
        ) : (
          paymentMethods.map(method => (
            <div key={method.id} className="bg-gradient-to-br from-white to-gray-50 rounded-lg shadow-md p-6 border border-gray-100">
              <div className="flex items-center justify-between mb-6">
                <div className="flex items-center gap-3">
                  <div className={`p-2 rounded-full ${
                    method.type === 'wallet' ? 'bg-purple-100 text-purple-600' : 
                    method.type === 'electronic' ? 'bg-blue-100 text-blue-600' : 
                    'bg-green-100 text-green-600'
                  }`}>
                    {method.settings?.icon || (
                      method.type === 'wallet' ? '๐' : 
                      method.type === 'electronic' ? '๐ณ' : 
                      '๐ฐ'
                    )}
                  </div>
                  <h3 className="text-xl font-bold">{method.name}</h3>
                </div>
                <label className="relative inline-flex items-center cursor-pointer">
                  <input
                    type="checkbox"
                    checked={method.status === 'active'}
                    onChange={(e) => handlePaymentMethodStatusChange(method.id, e.target.checked)}
                    className="sr-only peer"
                  />
                  <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:right-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                </label>
              </div>

              <div className="space-y-6">
                <div className="bg-white p-4 rounded-lg border border-gray-100">
                  <p className="text-gray-600">{method.description}</p>
                </div>

                <div>
                  <h4 className="font-semibold text-gray-800 mb-3 flex items-center gap-2">
                    <span className="text-blue-600">๐</span>
                    ุฎุทูุงุช ุงูุนูู
                  </h4>
                  <div className="space-y-2">
                    {method.settings?.steps?.map((step, index) => (
                      <div key={index} className="bg-white px-4 py-2 rounded-lg shadow-sm">
                        {step}
                      </div>
                    ))}
                  </div>
                </div>

                {method.settings?.note && (
                  <div className={`p-4 rounded-lg ${
                    method.type === 'wallet' ? 'bg-purple-50 text-purple-800' : 
                    method.type === 'electronic' ? 'bg-blue-50 text-blue-800' : 
                    'bg-green-50 text-green-800'
                  }`}>
                    <p>{method.settings.note}</p>
                  </div>
                )}
              </div>
            </div>
          ))
        )}
      </div>

      {/* Commission Settings */}
      <div className="bg-gradient-to-br from-white to-gray-50 rounded-lg shadow-md p-6 border border-gray-100">
        <div className="flex items-center gap-3 mb-6">
          <div className="p-2 bg-purple-100 text-purple-600 rounded-full">๐ฐ</div>
          <h3 className="text-xl font-bold">ุฅุนุฏุงุฏุงุช ุงูุนูููุฉ ูุงูุฎุตููุงุช</h3>
        </div>
        
        <div className="space-y-6">
          <div className="bg-white p-4 rounded-lg border border-gray-100">
            <label className="block text-sm font-medium text-gray-700 mb-2">
              ูุณุจุฉ ุนูููุฉ ุงูุจุงุฆุน (%)
            </label>
            <div className="flex items-center gap-2">
              <input
                type="number"
                value={settings.deliveryCommission}
                onChange={(e) => setSettings({ ...settings, deliveryCommission: Number(e.target.value) })}
                className="w-32 border rounded-lg px-4 py-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all"
                min="0"
                max="100"
              />
              <span className="text-gray-600">%</span>
            </div>
          </div>

          <div className="bg-white p-4 rounded-lg border border-gray-100 space-y-3">
            <label className="flex items-center gap-3 p-2 hover:bg-gray-50 rounded-lg transition-colors cursor-pointer">
              <input
                type="checkbox"
                checked={settings.autoDeductFromDriver}
                onChange={(e) => setSettings({ ...settings, autoDeductFromDriver: e.target.checked })}
                className="rounded text-blue-600 focus:ring-blue-500 w-5 h-5"
              />
              <span>ุฎุตู ุชููุงุฆู ูู ุงูุณุงุฆู (ุงูุฏูุน ุงููุณุจู)</span>
            </label>

            <label className="flex items-center gap-3 p-2 hover:bg-gray-50 rounded-lg transition-colors cursor-pointer">
              <input
                type="checkbox"
                checked={settings.autoChargeVendor}
                onChange={(e) => setSettings({ ...settings, autoChargeVendor: e.target.checked })}
                className="rounded text-blue-600 focus:ring-blue-500 w-5 h-5"
              />
              <span>ุดุญู ูุญูุธุฉ ุงูุจุงุฆุน ุชููุงุฆููุง</span>
            </label>
          </div>

          <div className="bg-gradient-to-r from-blue-50 to-purple-50 p-6 rounded-lg">
            <h4 className="font-semibold text-gray-800 mb-3 flex items-center gap-2">
              <span>๐งช</span>
              ูุซุงู ุชูุถูุญู
            </h4>
            <p className="text-gray-600 mb-4">ุงูุทูุจ: 70 ุดููู (60 ููููุชุฌ + 10 ุชูุตูู)</p>
            <div className="space-y-2">
              <p className="text-blue-600 bg-white px-4 py-2 rounded-lg shadow-sm">
                ๐น ุนูููุฉ ุงูุจุงุฆุน = {settings.deliveryCommission}% ูู 60 ุดููู = {(60 * settings.deliveryCommission / 100).toFixed(2)} ุดููู
              </p>
              <p className="text-red-600 bg-white px-4 py-2 rounded-lg shadow-sm">
                ๐น ุนูููุฉ ุงูุณุงุฆู = {settings.deliveryCommission}% ูู 10 ุดููู = {(10 * settings.deliveryCommission / 100).toFixed(2)} ุดููู
              </p>
              <p className="text-green-600 bg-white px-4 py-2 rounded-lg shadow-sm">
                ๐น ุฅุฌูุงูู ุงูุนูููุฉ ูููุธุงู = {(60 * settings.deliveryCommission / 100 + 10 * settings.deliveryCommission / 100).toFixed(2)} ุดููู
              </p>
            </div>
          </div>
        </div>
      </div>

      <PaymentMethodCard type="wallet" method={settings.wallet} />
      <PaymentMethodCard type="traditional" method={settings.traditional} />
    </div>
  );
}